{"version":3,"file":"static/webpack/static/development/pages/_app.js.6cde5251b45335da1891.hot-update.js","sources":["webpack:///./components/Language.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport config from \"../config\";\nimport constants from \"./constants\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: auto;\n`;\n\nconst Button = styled.button`\n  color: ${constants.fg};\n  font-size: 27px;\n  padding: 15px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Dropdown = styled.div`\n  display: ${p => (p.open ? \"block\" : \"none\")};\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: ${constants.bg};\n\n  .bg {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n  }\n\n  ul {\n    position: relative;\n    z-index: 3;\n    list-style: none;\n    margin: 0;\n    padding: 8px 20px;\n    line-height: 2em;\n    color: ${constants.fg};\n  }\n  li {\n    white-space: nowrap;\n  }\n`;\n\nconst Language = () => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n\n  const [isActive, setActivity] = useState(false);\n\n  const setLanguage = lang => dispatch({ type: \"setLanguage\", lang });\n  const toggle = () => setActivity(!isActive);\n\n  // Create urls for translation\n  const router = useRouter();\n  const currentLang =\n    Object.keys(config.languages).find(lang =>\n      router.pathname.match(`^/${lang}/`)\n    ) || config.defaultLanguage;\n  const realPath =\n    currentLang === config.defaultLanguage\n      ? router.pathname\n      : router.pathname.replace(`^/${currentLang}`, '');\n\n  const createLangUrl = (lang) => (\n    lang === config.defaultLanguage\n      ? realPath\n      : `/${lang}${realPath}`\n  );\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={toggle}>\n        <FontAwesomeIcon icon={faGlobe} />\n      </Button>\n      <Dropdown open={isActive}>\n        <div className=\"bg\" onClick={toggle} />\n        <ul>\n          {Object.entries(config.languages).map(([id, label]) => (\n            id === currentLang ? (\n              <li key={id}>\n                {label}\n              </li>\n            ) : (\n              <li key={id} onClick={() => setLanguage(id)}>\n                <Link href={createLangUrl(id)}>{label}</Link>\n              </li>\n            )\n          ))}\n        </ul>\n      </Dropdown>\n    </Wrapper>\n  );\n};\n\nexport default Language;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AA6BA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAIA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAeA;AACA;AACA;;;;A","sourceRoot":""}