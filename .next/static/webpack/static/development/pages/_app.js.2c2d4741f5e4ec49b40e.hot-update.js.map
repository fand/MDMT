{"version":3,"file":"static/webpack/static/development/pages/_app.js.2c2d4741f5e4ec49b40e.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import React from \"react\";\nimport throttle from \"lodash.throttle\";\nimport styled from \"styled-components\";\nimport constants from \"./constants\";\nimport Sidebar from \"./sidebar\";\nimport Header from \"./header\";\nimport Meta from \"./meta\";\n// import Shader from \"./shader\";\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: visible;\n  display: flex;\n\n  transition: left 0.3s;\n  @media (max-width: ${constants.mobile}px) {\n    width: auto;\n    left: -100vw;\n    &.menu {\n      left: 0;\n    }\n  }\n`;\n\nconst SidebarWrapper = styled.div`\nwidth: 270px;\n-webkit-overflow-scrolling: touch;\n@media (max-width: ${constants.mobile}px) {\n  width: 82vw;\n}\n`;\n\nconst BodyColumn = styled.div`\nflex: 1;\nposition: relative;\n@media (max-width: ${constants.mobile}px) {\n  width: 100vw;\n}\n`;\n\nconst MainWrapper = styled.main`\nposition: absolute;\ntop: 0;\nleft: 0;\nheight: 100%;\nwidth: 100%;\noverflow: auto;\n-webkit-overflow-scrolling: touch;\n`;\n\nconst HeaderWrapper = styled.div`\nposition: absolute;\ntop: 0;\nwidth: 100%;\nz-index: 2;\n`;\n\nclass Layout extends React.Component {\n  // static getInitialProps = async ({ pathname }) => ({\n  //     path: pathname\n  // });\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === \"production\") {\n      if (\n        typeof navigator !== \"undefined\" &&\n        \"serviceWorker\" in navigator\n      ) {\n        navigator.serviceWorker\n        .register(\"/sw.js\")\n        .then(console.log) // eslint-disable-line\n        .catch(console.error); // eslint-disable-line\n      }\n    }\n\n    if (this.body) {\n      this.body.addEventListener(\"scroll\", this.watchScroll);\n    }\n\n    this.watchScroll();\n    // this.props.dispatch(hideMenu());\n  }\n\n  componentWillUnmount() {\n    if (this.body) {\n      this.body.removeEventListener(\"scroll\", this.watchScroll);\n    }\n  }\n\n  watchScroll = throttle(() => {\n    if (this.body) {\n      // this.props.dispatch(\n      //   this.body.scrollTop > 100 ? showHeader() : hideHeader()\n      // );\n    }\n  }, 100);\n\n  url() {\n    return `https://veda.gl${this.props.path}`;\n  }\n\n  siteName() {\n    return constants.og.title;\n  }\n\n  title() {\n    const article =\n    this.props.article[this.props.lang] || this.props.article.en;\n    return (\n      (article.title ? article.title + \" | \" : \"\") + constants.og.title\n    );\n  }\n\n  description() {\n    return this.props.article.description || constants.og.description;\n  }\n\n  image() {\n    return this.props.article.image || constants.og.image;\n  }\n\n  setBody = (el) => {\n    this.body = el;\n  };\n\n  render() {\n    const sc = this.props.isMenuVisible ? \"menu\" : \"\";\n\n    return (\n      <div>\n        <Meta/>\n        <Wrapper className={sc}>\n          <SidebarWrapper className={sc}>\n            <Sidebar path={this.props.path} />\n          </SidebarWrapper>\n          <BodyColumn>\n            <HeaderWrapper>\n              <Header />\n            </HeaderWrapper>\n            <MainWrapper ref={this.setBody} className=\"body\">\n              {this.props.children}\n            </MainWrapper>\n          </BodyColumn>\n        </Wrapper>\n        {/* <Shader shader={this.props.shader} /> */}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAgCA;AACA;AAEA;AACA;AACA;AACA;AACA;AAyBA;AACA;AACA;AACA;;;;;;AAlEA;AACA;AACA;AAEA;AACA,mBAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;;;AAUA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAMA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA1FA;AACA;AA4FA;;;;A","sourceRoot":""}