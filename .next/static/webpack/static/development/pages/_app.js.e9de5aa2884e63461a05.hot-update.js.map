{"version":3,"file":"static/webpack/static/development/pages/_app.js.e9de5aa2884e63461a05.hot-update.js","sources":["webpack:///./components/header.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport constants from \"./constants\";\n// import Hamburger from './hamburger';\nimport { Arrow } from 'react-burgers';\nimport { AppContext, DispatchContext } from \"../lib/context\";\n\nconst Nav = styled.div`\n  position: relative;\n  width: 100%;\n  height: 56px;\n  line-height: 56px;\n  transition: 0.5s;\n  background: transparent;\n  .mobile {\n    display: none;\n  }\n  @media (max-width: ${constants.mobile}px) {\n    &.visible {\n      background: linear-gradient(\n        to bottom,\n        rgba(0, 0, 30, 1),\n        rgba(0, 0, 30, 0.5)\n      );\n    }\n    .mobile {\n      display: block;\n    }\n    .pc {\n      display: none;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  height: 100%;\n  padding: 4px 0;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n\n  opacity: 0;\n  @media (max-width: ${constants.mobile}px) {\n    transition: opacity 1s;\n    &.visible {\n      opacity: 1;\n    }\n  }\n\n  a,\n  img {\n    display: block;\n    height: 100%;\n    text-decoration: none;\n  }\n  img {\n    margin-left: -10px;\n  }\n`;\n\nconst Left = styled.div`\n  position: absolute;\n  left: 0;\n`;\nconst Right = styled.div`\n  position: absolute;\n  display: flex;\n  right: 0;\n`;\nconst Button = styled.div`\n  cursor: pointer;\n  color: #ddd;\n  user-select: none;\n  & > img {\n    display: block;\n    width: 56px;\n    height: 56px;\n    padding: 15px;\n    font-size: 24px;\n    line-height: 27px;\n  }\n  span {\n    padding: 15px;\n    position: relative;\n    display: block;\n    top: -1em;\n  }\n  &:hover {\n    opacity: 1;\n    color: #fff;\n  }\n\n  .inner {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    background: rgba(0, 0, 0, 0.8);\n    color: #fff;\n    text-align: center;\n    a {\n      text-decoration: none;\n      color: white;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    i {\n      margin-right: 10px;\n      text-align: center;\n    }\n    display: none;\n    opacity: 0;\n    transition: opacity 0.5s;\n    &.visible {\n      width: 180px;\n      display: block;\n      opacity: 1;\n    }\n    &:before {\n      content: \"\";\n      position: absolute;\n      top: -30px;\n      right: 12px;\n      border: 15px solid transparent;\n      border-bottom: 15px solid black;\n    }\n  }\n`;\n\nconst Header = (props) => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n\n  const toggleMenu = () => dispatch({ type: 'toggleMenu' });\n  const toggleLanguage = () => dispatch({ type: 'toggleLanguage' });\n\n  const cls = state.isHeaderVisible ? \"visible\" : \"\";\n\n  // const { lang } = props;\n  const lang = 'en';\n\n  return (\n    <Nav className={cls}>\n      <Logo className={cls}>\n        <Link href={lang === \"en\" ? \"/\" : `/?lang=${lang}`}>\n          <a>\n            <img src=\"/static/images/logo_header.png\" alt=\"VEDA logo\" />\n          </a>\n        </Link>\n      </Logo>\n\n      <Left>\n        <Arrow active={false} color={constants.fg} onClick={toggleMenu} />\n        {/* <Button className=\"mobile\" onClick={toggleMenu}>\n          <img src=\"/static/images/i_menu.png\" alt=\"Menu\" />\n        </Button> */}\n      </Left>\n      <Right>\n        {props.i18n && (\n          <Button onClick={toggleLanguage}>\n            {lang === \"en\" && <span>日本語</span>}\n            {lang === \"ja\" && <span>English</span>}\n          </Button>\n        )}\n      </Right>\n    </Nav>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AA2DA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}