{"version":3,"file":"static/webpack/static/development/pages/_app.js.6ba2d7a4eefc9488816c.hot-update.js","sources":["webpack:///./components/header.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { opacify } from 'polished';\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport constants from \"./constants\";\nimport config from \"../config\";\nimport Hamburger from './hamburger';\n\nconst Nav = styled.div`\n  position: relative;\n  width: 100%;\n  height: 56px;\n  transition: 0.5s;\n  background: transparent;\n\n  @media (max-width: ${constants.mobile}px) {\n    &.visible {\n      background: linear-gradient(\n        to bottom,\n        ${p => opacify(1, p.color)},\n        ${p => p.color}\n      );\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  height: 100%;\n  padding: 4px 0;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n\n  opacity: 0;\n  @media (max-width: ${constants.mobile}px) {\n    transition: opacity 1s;\n    &.visible {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Left = styled.div`\n  position: absolute;\n  left: 0;\n`;\nconst Right = styled.div`\n  position: absolute;\n  display: flex;\n  right: 0;\n`;\n\nconst Header = (props) => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n\n  const toggleMenu = () => dispatch({ type: 'toggleMenu' });\n  const setLanguage = (lang) => dispatch({ type: 'setLanguage', lang });\n\n  const cls = state.isHeaderVisible ? \"visible\" : \"\";\n\n  // const { lang } = props;\n  const lang = 'en';\n\n  return (\n    <Nav className={cls} color={state.color}>\n      <Logo className={cls}>\n        <Link href={lang === \"en\" ? \"/\" : `/?lang=${lang}`}>\n          <a>\n            <img src=\"/static/images/logo_header.png\" alt=\"VEDA logo\" />\n          </a>\n        </Link>\n      </Logo>\n\n      <Left className=\"mobile\">\n        <Hamburger active={state.isMenuVisible} onClick={toggleMenu} />\n      </Left>\n      <Right>\n        <ul>\n          {Object.entries(config.languages).map(([id, label]) =>\n            <li key={id} onClick={() => setLanguage(id)}>{label}</li>\n          )}\n        </ul>\n      </Right>\n    </Nav>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AACA;;;;A","sourceRoot":""}