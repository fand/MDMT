{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/amagi/src/github.com/fand/next-docs-template/pages/index.md\";\n\n/* @jsx mdx */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  };\n};\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), mdx(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, mdx(\"img\", {\n    alt: \"logo\",\n    src: \"/static/images/logo_720h.png\",\n    width: \"192\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), mdx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"VEDA\"), mdx(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"VJ system on Atom\"), mdx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"VEDA is an Atom package for VJ / Livecoding with GLSL.\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif\",\n    \"alt\": null\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))), mdx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Easy GLSL runtime\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"VEDA supports both fragment shaders and vertex shaders.\\nIn fragment shaders, you can use uniform variables like \", mdx(\"a\", {\n    target: \"\\\\_blank\",\n    href: \"http://glslsandbox.com/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"GLSL Sandbox\"), \".\\nIn vertex shaders, you can use uniform variables like \", mdx(\"a\", {\n    target: \"\\\\_blank\",\n    href: \"https://vertexshaderart.com/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"vertexshaderart.com\"), \".\"), mdx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Cross-platform by design\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"VEDA is built on web technologies and provided as an Atom package.\\nIt works on Windows, macOS, and Linux.\"), mdx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Auto-completion, Linters, ...\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Because VEDA runs on Atom, you can write GLSL with your favorite settings, package, and snippets.\\nAlso, VEDA automatically installs \", mdx(\"a\", {\n    target: \"\\\\_blank\",\n    href: \"https://atom.io/packages/autocomplete-glsl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"autocomplete-glsl\"), \" and \", mdx(\"a\", {\n    target: \"\\\\_blank\",\n    href: \"https://atom.io/packages/autocomplete-glsl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"linter-glsl\"), \" for rapid GLSL development.\"), mdx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Audio, MIDI, OSC, and more!\"), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"VEDA supports a variety of inputs such as:\"), mdx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Audio\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"MIDI\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"OSC\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"WebCam\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Gamepad\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Keyboard\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Mouse\")), mdx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), mdx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), mdx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"If you like it, please post to Twitter with hashtag \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"#VEDAJS\"), \".\\nWe'll be happy to see your tweets!\\uD83D\\uDE38\"), mdx(\"a\", {\n    href: \"https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs\",\n    target: \"\\\\_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Tweet with #VEDAJS\"));\n}\n;\nMDXContent.isMDXComponent = true;\nMDXContent.frontmatter = {};","map":{"version":3,"sources":["/Users/amagi/src/github.com/fand/next-docs-template/pages/index.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent","frontmatter"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div align=\"center\">\n  <img alt=\"logo\" src=\"/static/images/logo_720h.png\" width=\"192\" />\n  <h1>VEDA</h1><i>VJ system on Atom</i>\n  <br />\n    </div>\n    {\n      /* ## Let your Atom blink. */\n    }\n    <p>{`VEDA is an Atom package for VJ / Livecoding with GLSL.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif\",\n        \"alt\": null\n      }}></img></p>\n    <h3>{`Easy GLSL runtime`}</h3>\n    <p>{`VEDA supports both fragment shaders and vertex shaders.\nIn fragment shaders, you can use uniform variables like `}<a target=\"\\_blank\" href=\"http://glslsandbox.com/\">{`GLSL Sandbox`}</a>{`.\nIn vertex shaders, you can use uniform variables like `}<a target=\"\\_blank\" href=\"https://vertexshaderart.com/\">{`vertexshaderart.com`}</a>{`.`}</p>\n    <h3>{`Cross-platform by design`}</h3>\n    <p>{`VEDA is built on web technologies and provided as an Atom package.\nIt works on Windows, macOS, and Linux.`}</p>\n    <h3>{`Auto-completion, Linters, ...`}</h3>\n    <p>{`Because VEDA runs on Atom, you can write GLSL with your favorite settings, package, and snippets.\nAlso, VEDA automatically installs `}<a target=\"\\_blank\" href=\"https://atom.io/packages/autocomplete-glsl\">{`autocomplete-glsl`}</a>{` and `}<a target=\"\\_blank\" href=\"https://atom.io/packages/autocomplete-glsl\">{`linter-glsl`}</a>{` for rapid GLSL development.`}</p>\n    <h3>{`Audio, MIDI, OSC, and more!`}</h3>\n    <p>{`VEDA supports a variety of inputs such as:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Audio`}</li>\n      <li parentName=\"ul\">{`MIDI`}</li>\n      <li parentName=\"ul\">{`OSC`}</li>\n      <li parentName=\"ul\">{`WebCam`}</li>\n      <li parentName=\"ul\">{`Gamepad`}</li>\n      <li parentName=\"ul\">{`Keyboard`}</li>\n      <li parentName=\"ul\">{`Mouse`}</li>\n    </ul>\n    <br />\n    {\n      /* ## VEDA.js\n      VEDA.js is a GLSL framework for modern web development.\n      It was created as a part of VEDA, and published to npm later.\n      [VEDA.js](/vedajs) */\n    }\n    {\n      /* ## LICENSE\n      Projects around VEDA is licensed in **MIT** license.\n      So you can use them anywhere you want! */\n    }\n    <hr></hr>\n    <p>{`If you like it, please post to Twitter with hashtag `}<inlineCode parentName=\"p\">{`#VEDAJS`}</inlineCode>{`.\nWe'll be happy to see your tweets!😸`}</p>\n    <a href=\"https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs\" target=\"\\_blank\">Tweet with #VEDAJS</a>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  MDXContent.frontmatter = {};\n  "]},"metadata":{},"sourceType":"module"}