{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amagi/src/github.com/fand/next-docs-template/components/Language.js\";\nimport React, { useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/router';\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport config from \"../config\";\nimport constants from \"./constants\";\nvar Wrapper = styled.div.withConfig({\n  displayName: \"Language__Wrapper\",\n  componentId: \"sc-9kihq3-0\"\n})([\"position:relative;height:100%;width:auto;\"]);\nvar Button = styled.button.withConfig({\n  displayName: \"Language__Button\",\n  componentId: \"sc-9kihq3-1\"\n})([\"color:\", \";font-size:27px;padding:15px;border:none;background:transparent;cursor:pointer;outline:none;&:hover{opacity:0.8;}\"], constants.fg);\nvar Dropdown = styled.div.withConfig({\n  displayName: \"Language__Dropdown\",\n  componentId: \"sc-9kihq3-2\"\n})([\"display:\", \";position:absolute;top:100%;right:0;background:\", \";.bg{position:fixed;width:100%;height:100%;left:0;top:0;background:rgba(0,0,0,0.5);z-index:2;}ul{position:relative;z-index:3;list-style:none;margin:0;padding:8px 20px;line-height:2em;color:\", \";}li{white-space:nowrap;}\"], function (p) {\n  return p.open ? \"block\" : \"none\";\n}, constants.bg, constants.fg);\n\nvar Language = function Language() {\n  var state = useContext(AppContext);\n  var dispatch = useContext(DispatchContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setActivity = _useState2[1];\n\n  var setLanguage = function setLanguage(lang) {\n    return dispatch({\n      type: \"setLanguage\",\n      lang: lang\n    });\n  };\n\n  var toggle = function toggle() {\n    return setActivity(!isActive);\n  };\n\n  var router = useRouter();\n  console.log(router);\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faGlobe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Dropdown, {\n    open: isActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, _Object$entries(config.languages).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        label = _ref2[1];\n\n    return React.createElement(\"li\", {\n      key: id,\n      onClick: function onClick() {\n        return setLanguage(id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, label));\n  }))));\n};\n\nexport default Language;","map":{"version":3,"sources":["/Users/amagi/src/github.com/fand/next-docs-template/components/Language.js"],"names":["React","useState","useContext","Link","useRouter","styled","FontAwesomeIcon","faGlobe","AppContext","DispatchContext","config","constants","Wrapper","div","Button","button","fg","Dropdown","p","open","bg","Language","state","dispatch","isActive","setActivity","setLanguage","lang","type","toggle","router","console","log","languages","map","id","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,gBAA5C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,iDAAb;AAMA,IAAMC,MAAM,GAAGT,MAAM,CAACU,MAAV;AAAA;AAAA;AAAA,oIACDJ,SAAS,CAACK,EADT,CAAZ;AAaA,IAAMC,QAAQ,GAAGZ,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,kSACD,UAAAK,CAAC;AAAA,SAAKA,CAAC,CAACC,IAAF,GAAS,OAAT,GAAmB,MAAxB;AAAA,CADA,EAKER,SAAS,CAACS,EALZ,EAwBDT,SAAS,CAACK,EAxBT,CAAd;;AA+BA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,KAAK,GAAGpB,UAAU,CAACM,UAAD,CAAxB;AACA,MAAMe,QAAQ,GAAGrB,UAAU,CAACO,eAAD,CAA3B;;AAFqB,kBAIWR,QAAQ,CAAC,KAAD,CAJnB;AAAA;AAAA,MAIduB,QAJc;AAAA,MAIJC,WAJI;;AAMrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,WAAIJ,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,aAAR;AAAuBD,MAAAA,IAAI,EAAJA;AAAvB,KAAD,CAAZ;AAAA,GAAxB;;AACA,MAAME,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMJ,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,GAAf;;AAEA,MAAMM,MAAM,GAAG1B,SAAS,EAAxB;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAED,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEtB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEiB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAoB,IAAA,OAAO,EAAEK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAAenB,MAAM,CAACuB,SAAtB,EAAiCC,GAAjC,CAAqC;AAAA;AAAA,QAAEC,EAAF;AAAA,QAAMC,KAAN;;AAAA,WACpC;AAAI,MAAA,GAAG,EAAED,EAAT;AAAa,MAAA,OAAO,EAAE;AAAA,eAAMT,WAAW,CAACS,EAAD,CAAjB;AAAA,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAf,CADF,CADoC;AAAA,GAArC,CADH,CAFF,CAJF,CADF;AAiBD,CA7BD;;AA+BA,eAAef,QAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/router'\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport config from \"../config\";\nimport constants from \"./constants\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: auto;\n`;\n\nconst Button = styled.button`\n  color: ${constants.fg};\n  font-size: 27px;\n  padding: 15px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Dropdown = styled.div`\n  display: ${p => (p.open ? \"block\" : \"none\")};\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: ${constants.bg};\n\n  .bg {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: rgba(0, 0, 0, 0.5);\n    z-index: 2;\n  }\n\n  ul {\n    position: relative;\n    z-index: 3;\n    list-style: none;\n    margin: 0;\n    padding: 8px 20px;\n    line-height: 2em;\n    color: ${constants.fg};\n  }\n  li {\n    white-space: nowrap;\n  }\n`;\n\nconst Language = () => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n\n  const [isActive, setActivity] = useState(false);\n\n  const setLanguage = lang => dispatch({ type: \"setLanguage\", lang });\n  const toggle = () => setActivity(!isActive);\n\n  const router = useRouter();\n  console.log(router);\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={toggle}>\n        <FontAwesomeIcon icon={faGlobe} />\n      </Button>\n      <Dropdown open={isActive}>\n        <div className=\"bg\" onClick={toggle} />\n        <ul>\n          {Object.entries(config.languages).map(([id, label]) => (\n            <li key={id} onClick={() => setLanguage(id)}>\n              <Link href=\"\">{label}</Link>\n            </li>\n          ))}\n        </ul>\n      </Dropdown>\n    </Wrapper>\n  );\n};\n\nexport default Language;\n"]},"metadata":{},"sourceType":"module"}