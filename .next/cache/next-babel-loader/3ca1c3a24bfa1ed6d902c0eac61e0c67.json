{"ast":null,"code":"var _jsxFileName = \"/Users/amagi/src/github.com/fand/next-docs-template/components/header.js\";\nimport React, { useContext } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { opacify } from 'polished';\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport constants from \"./constants\";\nimport Hamburger from './hamburger';\nimport Language from './Language';\nvar Nav = styled.div.withConfig({\n  displayName: \"header__Nav\",\n  componentId: \"sc-1o68dil-0\"\n})([\"position:relative;width:100%;height:56px;display:flex;justify-content:space-between;transition:0.5s;background:transparent;@media (max-width:\", \"px){&.visible{background:linear-gradient( to bottom,\", \",\", \" );}}\"], constants.mobile, function (p) {\n  return opacify(1, p.color);\n}, function (p) {\n  return p.color;\n});\nvar Logo = styled.div.withConfig({\n  displayName: \"header__Logo\",\n  componentId: \"sc-1o68dil-1\"\n})([\"height:100%;padding:4px 0;position:absolute;left:50%;transform:translateX(-50%);opacity:0;@media (max-width:\", \"px){transition:opacity 1s;&.visible{opacity:1;}}\"], constants.mobile);\nvar Left = styled.div.withConfig({\n  displayName: \"header__Left\",\n  componentId: \"sc-1o68dil-2\"\n})([\"\", \" \", \"\"], ''\n/* position: absolute; */\n, ''\n/* left: 0; */\n);\nvar Right = styled.div.withConfig({\n  displayName: \"header__Right\",\n  componentId: \"sc-1o68dil-3\"\n})([\"\", \" \", \" \", \"\"], ''\n/* position: absolute; */\n, ''\n/* display: flex; */\n, ''\n/* right: 0; */\n);\n\nvar Header = function Header(props) {\n  var state = useContext(AppContext);\n  var dispatch = useContext(DispatchContext);\n\n  var toggleMenu = function toggleMenu() {\n    return dispatch({\n      type: 'toggleMenu'\n    });\n  };\n\n  var cls = state.isHeaderVisible ? \"visible\" : \"\"; // const { lang } = state;\n\n  var _en = 'en',\n      lang = _en.lang;\n  return React.createElement(Nav, {\n    className: cls,\n    color: state.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    className: cls,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: lang === \"en\" ? \"/\" : \"/?lang=\".concat(lang),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/static/images/logo_header.png\",\n    alt: \"VEDA logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))), React.createElement(Left, {\n    className: \"mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Hamburger, {\n    active: state.isMenuVisible,\n    onClick: toggleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Right, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Language, {\n    lang: lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/amagi/src/github.com/fand/next-docs-template/components/header.js"],"names":["React","useContext","Link","styled","opacify","AppContext","DispatchContext","constants","Hamburger","Language","Nav","div","mobile","p","color","Logo","Left","Right","Header","props","state","dispatch","toggleMenu","type","cls","isHeaderVisible","lang","isMenuVisible"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,gBAA5C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,GAAG,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,4NAScJ,SAAS,CAACK,MATxB,EAaC,UAAAC,CAAC;AAAA,SAAIT,OAAO,CAAC,CAAD,EAAIS,CAAC,CAACC,KAAN,CAAX;AAAA,CAbF,EAcC,UAAAD,CAAC;AAAA,SAAIA,CAAC,CAACC,KAAN;AAAA,CAdF,CAAT;AAoBA,IAAMC,IAAI,GAAGZ,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,yKAQaJ,SAAS,CAACK,MARvB,CAAV;AAgBA,IAAMI,IAAI,GAAGb,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,kBACN;AAAG;AADG,EAEN;AAAG;AAFG,CAAV;AAKA,IAAMM,KAAK,GAAGd,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,uBACP;AAAG;AADI,EAEP;AAAG;AAFI,EAGP;AAAG;AAHI,CAAX;;AAMA,IAAMO,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,KAAK,GAAGnB,UAAU,CAACI,UAAD,CAAxB;AACA,MAAMgB,QAAQ,GAAGpB,UAAU,CAACK,eAAD,CAA3B;;AAEA,MAAMgB,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AAAA,GAAnB;;AAEA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,eAAN,GAAwB,SAAxB,GAAoC,EAAhD,CANwB,CAQxB;;AARwB,YASP,IATO;AAAA,MAShBC,IATgB,OAShBA,IATgB;AAWxB,SACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,GAAhB;AAAqB,IAAA,KAAK,EAAEJ,KAAK,CAACN,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAI,KAAK,IAAT,GAAgB,GAAhB,oBAAgCA,IAAhC,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,gCAAT;AAA0C,IAAA,GAAG,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEN,KAAK,CAACO,aAAzB;AAAwC,IAAA,OAAO,EAAEL,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAYE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEI,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAkBD,CA7BD;;AA+BA,eAAeR,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { opacify } from 'polished';\nimport { AppContext, DispatchContext } from \"../lib/context\";\nimport constants from \"./constants\";\nimport Hamburger from './hamburger';\nimport Language from './Language';\n\nconst Nav = styled.div`\n  position: relative;\n  width: 100%;\n  height: 56px;\n  display: flex;\n  justify-content: space-between;\n\n  transition: 0.5s;\n  background: transparent;\n  @media (max-width: ${constants.mobile}px) {\n    &.visible {\n      background: linear-gradient(\n        to bottom,\n        ${p => opacify(1, p.color)},\n        ${p => p.color}\n      );\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  height: 100%;\n  padding: 4px 0;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n\n  opacity: 0;\n  @media (max-width: ${constants.mobile}px) {\n    transition: opacity 1s;\n    &.visible {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Left = styled.div`\n  ${'' /* position: absolute; */}\n  ${'' /* left: 0; */}\n`;\n\nconst Right = styled.div`\n  ${'' /* position: absolute; */}\n  ${'' /* display: flex; */}\n  ${'' /* right: 0; */}\n`;\n\nconst Header = (props) => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n\n  const toggleMenu = () => dispatch({ type: 'toggleMenu' });\n\n  const cls = state.isHeaderVisible ? \"visible\" : \"\";\n\n  // const { lang } = state;\n  const { lang } = 'en';\n\n  return (\n    <Nav className={cls} color={state.color}>\n      <Logo className={cls}>\n        <Link href={lang === \"en\" ? \"/\" : `/?lang=${lang}`}>\n          <a>\n            <img src=\"/static/images/logo_header.png\" alt=\"VEDA logo\" />\n          </a>\n        </Link>\n      </Logo>\n\n      <Left className=\"mobile\">\n        <Hamburger active={state.isMenuVisible} onClick={toggleMenu} />\n      </Left>\n      <Right>\n        <Language lang={lang}/>\n      </Right>\n    </Nav>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}