{"version":3,"file":"static/webpack/static/development/pages/_app.js.516fb501d628b7f16c67.hot-update.js","sources":["webpack:///./components/Language.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { AppContext } from \"../lib/context\";\nimport config from \"../config\";\nimport constants from \"./constants\";\nimport { useLanguage } from \"../lib/hooks\";\nimport { getPathForLang } from \"../lib/utils\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: auto;\n`;\n\nconst Button = styled.button`\n  color: ${constants.fg};\n  font-size: 27px;\n  padding: 15px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst Dropdown = styled.div`\n  display: ${p => (p.open ? \"block\" : \"none\")};\n  position: absolute;\n  top: calc(100% + 8px);\n  right: 8px;\n  background: ${constants.bg};\n\n  .bg {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: rgba(0, 0, 0, 0.3);\n    z-index: 2;\n  }\n\n  ul {\n    position: relative;\n    z-index: 3;\n    list-style: none;\n    margin: 0 8px;\n    padding: 10px 20px;\n    line-height: 2em;\n    color: ${constants.fg};\n  }\n  li {\n    position: relative;\n    white-space: nowrap;\n    &.is-active:before {\n      content: \"\";\n      border-style: solid;\n      border-width: 5px 0 5px 5px;\n      border-color: transparent transparent transparent ${constants.fg};\n      position: absolute;\n      left: -16px;\n      top: 10px;\n    }\n  }\n\n  a,\n  a:visited {\n    color: ${constants.fg};\n  }\n`;\n\nconst Language = () => {\n  const [isActive, setActivity] = useState(false);\n\n  const hide = () => setActivity(false);\n  const toggle = () => setActivity(!isActive);\n\n  const lang = useLanguage();\n\n  // Create urls for translation\n  const router = useRouter();\n  let realPath =\n    lang === config.defaultLanguage\n      ? router.asPath\n      : router.asPath.replace(`/${lang}`, \"\");\n  if (realPath === \"\") {\n    realPath = \"/\";\n  }\n\n  const createLangUrl = langId => getPathForLang(langId, realPath);\n\n  return (\n    <Wrapper>\n      <Button type=\"button\" onClick={toggle}>\n        <FontAwesomeIcon icon={faGlobe} />\n      </Button>\n      <Dropdown open={isActive}>\n        <div className=\"bg\" onClick={hide} />\n        <ul>\n          {Object.entries(config.languages).map(([langId, label]) =>\n            langId === lang ? (\n              <li key={langId} className=\"is-active\">\n                {label}\n              </li>\n            ) : (\n              <li key={langId} onClick={hide}>\n                <Link href={createLangUrl(langId)}>\n                  <a>{label}</a>\n                </Link>\n              </li>\n            )\n          )}\n        </ul>\n      </Dropdown>\n    </Wrapper>\n  );\n};\n\nexport default Language;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AA4CA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAiBA;AACA;AACA;;;;A","sourceRoot":""}