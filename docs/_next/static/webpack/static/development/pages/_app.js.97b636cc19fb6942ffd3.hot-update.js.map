{"version":3,"file":"static/webpack/static/development/pages/_app.js.97b636cc19fb6942ffd3.hot-update.js","sources":["webpack:///./lib/utils.js"],"sourcesContent":["import config from \"../config\";\nimport nextConfig from \"../next.config\";\n\nexport const getPathForLang = (lang, path) => {\n  if (lang === config.defaultLanguage) {\n    return path;\n  }\n  if (path === '/') {\n    return `/${lang}`;\n  }\n  return `/${lang}${path}`;\n};\n\n// Convert root-relative URLs\nexport const prefixUrl = url => {\n  const m = url.match(/^\\/(.*)$/);\n  if (m) {\n    const prefix = nextConfig.assetPrefix;\n    return `${prefix}/${m[1]}`;\n  }\n\n  return url;\n};\n\nexport const removePrefixFromPath = path => {\n  if (!nextConfig.assetPrefix) {\n    return path;\n  }\n  const prefix = nextConfig.assetPrefix;\n  const prefixRe = new RegExp(`^/${prefix}`);\n  const pathWithoutPrefix = path.replace(prefixRe, '');\n\n  return pathWithoutPrefix || '/';\n}\n\nexport const removeLanguageFromPath = (path, currentLanguage) => {\n  if (currentLanguage === config.defaultLanguage) {\n    return path;\n  }\n\n  const langRe = new RegExp(`^/${currentLanguage}`);\n  const pathWithoutLang = path.replace(langRe, '');\n\n  return pathWithoutLang || '/';\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}