{"version":3,"file":"static/webpack/static/development/pages/_app.js.8ecde72de9239200c17c.hot-update.js","sources":["webpack:///./components/Layout.js"],"sourcesContent":["import React, { useEffect, useContext, useRef } from \"react\";\nimport { useRouter } from 'next/router'\nimport throttle from \"lodash.throttle\";\nimport styled from \"styled-components\";\nimport constants from \"./constants\";\nimport Sidebar from \"./sidebar\";\nimport Header from \"./header\";\nimport Meta from \"./meta\";\n// import Shader from \"./shader\";\nimport { AppContext, DispatchContext } from \"../lib/context\";\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100vw;\n  overflow: visible;\n  display: flex;\n\n  transition: left 0.3s;\n  @media (max-width: ${constants.mobile}px) {\n    width: auto;\n    left: -100vw;\n    &.menu {\n      left: 0;\n    }\n  }\n`;\n\nconst SidebarWrapper = styled.div`\n  width: 270px;\n  -webkit-overflow-scrolling: touch;\n  @media (max-width: ${constants.mobile}px) {\n    width: 100vw;\n  }\n`;\n\nconst BodyColumn = styled.div`\n  flex: 1;\n  position: relative;\n  @media (max-width: ${constants.mobile}px) {\n    width: 100vw;\n  }\n`;\n\nconst MainWrapper = styled.main`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst HeaderWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 2;\n`;\n\n\nconst Layout = (props) => {\n  const state = useContext(AppContext);\n  const dispatch = useContext(DispatchContext);\n  const bodyEl = useRef(null);\n\n  const watchScroll = throttle(() => {\n    if (bodyEl.current.scrollTop > 100) {\n      dispatch({ type: 'showHeader' });\n    } else {\n      dispatch({ type: 'hideHeader' });\n    }\n  }, 100);\n\n  useEffect(() => {\n    bodyEl.current.addEventListener(\"scroll\", watchScroll);\n    // watchScroll();\n\n    return () => {\n      bodyEl.current.removeEventListener(\"scroll\", watchScroll);\n    }\n  }, []);\n\n\n  const router = useRouter();\n  const path = router.pathname;\n  // console.log(path);\n\n  const sc = state.isMenuVisible ? \"menu\" : \"\";\n\n  return (\n    <div>\n      <Meta />\n      <Wrapper className={sc}>\n        <SidebarWrapper className={sc}>\n          <Sidebar path={path} />\n        </SidebarWrapper>\n        <BodyColumn>\n          <HeaderWrapper>\n            <Header />\n          </HeaderWrapper>\n          <MainWrapper ref={bodyEl} className=\"body\">\n            {props.children}\n          </MainWrapper>\n        </BodyColumn>\n      </Wrapper>\n      {/* <Shader shader={this.props.shader} /> */}\n    </div>\n  );\n};\n\nexport default Layout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}